@mixin attach-input-and-button($button_selector: 'input[type="submit"]') {
  display: flex;

  input:not(#{$button_selector}) {
    border-bottom-right-radius: 0;
    border-right: 0;
    border-top-right-radius: 0;
    line-height: $base-line-height;
    margin: 0;
  }
  #{$button_selector} {
    line-height: $base-line-height;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

@mixin convert_button_to_link {
  background-color: transparent;
  border-radius: 0;
  border: 0;
  box-sizing: content-box;
  color: $primary-color;
  display: inline;
  font-stretch: normal;
  font-weight: normal;
  line-height: $base-line-height;
  padding: 0;
  text-align: left;
  transition: color $base-duration $base-timing;
  -webkit-font-smoothing: auto;

  &:hover {
    color: shade($primary-color, 15%);
  }

  &:focus {
    color: shade($primary-color, 25%)
  }
}

@mixin icon_only_button($color: $primary-text-dark) {
  @include compact-button;

  background-color: transparent;
  color: $primary-text-dark
}

@mixin button-color($color) {
  background-color: $color;
  color: text-color-for($color);

  &:hover,
  &:focus {
    background-color: shade($color, 20%);
    color: text-color-for($color);
  }

  &:disabled {
    &:hover {
      background-color: $color;
    }
  }
}

@mixin lighten-on-hover($color: $primary-color) {
  &:hover,
  &:focus {
    background-color: lighten($color, 5%);
    color: text-color-for($color);
  }

  &:disabled {
    &:hover {
      background-color: $color;
    }
  }
}

@mixin raised-button {
  @include button;
  @include lighten-on-hover;
  @include elevation(2);

  &:hover,
  &:focus {
    @include elevation(4);
  }

  &:disabled {
    &:hover {
      @include elevation(4);
    }
  }
}

@mixin compact-button {
  padding: ($tiny-spacing / 2) ($tiny-spacing);
}

@mixin button {
  @include button-color($primary-color);

  appearance: none;
  border: 0;
  border-radius: $base-border-radius;
  cursor: pointer;
  display: inline-block;
  font-family: $base-font-family;
  font-size: $button-font-size;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: $small-spacing $base-spacing;
  text-align: center;
  text-decoration: none;
  transition: background-color $base-duration $base-timing;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

/*
Expects the following:
  1) There is a fa-circle icons stacked behind the main icons. The circle is
  used to indicate whether the icon toggle is on or off (it is displayed when
  the toggle is on).
  2) The label for each checkbox is the sibling immediately after the checkbox.
*/
@mixin checkboxes-to-icon-toggles {
  @include display(flex);
  @include flex-wrap(wrap);

  input[type="checkbox"] {
    display: none;
  }

  input:checked + label {
    opacity: 1.0;

    .fa-circle {
      display: inline;
      opacity: .3;
    }
  }

  label {
    opacity: .5;
    padding: $tiny-spacing $small-spacing;

    &:hover,
    &:focus {
      cursor: pointer;

      &:not(.hideHint) {
        opacity: .7;

        .fa-circle {
          display: inline;
          opacity: .25;
        }
      }
    }

    .fa-circle {
      display: none;
    }
  }
}

@mixin checkboxes-to-toggle-buttons {
  @include display(flex);
  @include flex-wrap(wrap);

  input[type="checkbox"] {
    display: none;
  }

  label {
    opacity: .5;
    padding: $tiny-spacing $small-spacing;

    &:hover,
    &:focus {
      cursor: pointer;

      &:not(.hideHint) {
        background-color: $primary-color;
        color: text-color-for($primary-color);
        opacity: .7;
        -webkit-font-smoothing: antialiased;
      }
    }
  }

  input:checked + label {
    background-color: $primary-color;
    border: 1px solid shade($primary-color, 15%);
    color: text-color-for($primary-color);
    opacity: 1.0;
    -webkit-font-smoothing: antialiased;

    &:first-of-type {
      margin-right: -1px;
    }
  }
}

// expects the element's direct children to be button elements that should
// behave as radio choices
@mixin radio-button-group {
  display: flex;
  justify-content: center;

  button {
    border-radius: 0;
    position: relative;

    &:first-child {
      border-top-left-radius: $base-border-radius;
      border-bottom-left-radius: $base-border-radius;
    }

    &:focus {
      outline: none;
    }

    &:last-child {
      border-top-right-radius: $base-border-radius;
      border-bottom-right-radius: $base-border-radius;
    }

    &.selected {
      background-color: $primary-color-dark;
      color: $primary-text-light;

      &:after {
        content: '';

        border-width: 0 0 1px;
        border-style: solid;
        bottom: $tiny-spacing;
        left: 15%;
        position: absolute;
        width: 70%;
      }
    }
  }
}
